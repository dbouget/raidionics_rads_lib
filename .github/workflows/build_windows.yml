name: Build Windows

on:
  push:
    branches:
      - '*'
  pull_request:
    branches: [master, release]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-2019
            TARGET: windows
            CMD_BUILD: python setup.py bdist_wheel --plat-name win_amd64
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Collect submodules
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Download ANTs
        uses: robinraju/release-downloader@main
        with:
          repository: "raidionics/Raidionics-dependencies"
          latest: true
          fileName: "ANTsX-v2.4.3_windows.zip"
          out-file-path: "downloads"

      - name: Extract ANTs
        run: |
          cd ${{github.workspace}}/downloads/
          7z x ${{github.workspace}}/downloads/ANTsX-v2.4.3_windows.zip
          mkdir ${{github.workspace}}/ANTs
#          mv ${{github.workspace}}/downloads/ANTsX-v2.4.3_windows/install ${{github.workspace}}/ANTs/

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel setuptools

      - name: Built wheel for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}

      - name: Upload Python wheel
        uses: actions/upload-artifact@v4
        with:
          name: Python wheel
          path: ${{github.workspace}}/dist/raidionicsrads-*.whl
          if-no-files-found: error

  test:
    needs: build
    strategy:
      matrix:
        os: [ windows-2019, windows-2022 ]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: "Python wheel"

      - name: Install wheel
        run: python.exe -m
             pip install --no-cache-dir --force-reinstall --find-links=. raidionicsrads-*
        shell: bash

      - name: Test CLI
        run: |
          raidionicsrads --help
          raidionicsseg --help

      - name: Clone repo
        uses: actions/checkout@v4

      - name: Segmentation pipeline unit test
        run: cd ${{github.workspace}}/tests && python test_segmentation_pipeline.py

      - name: Reporting pipeline unit test
        run: cd ${{github.workspace}}/tests && python reporting_pipeline_test.py

      - name: Reporting pipeline with BrainGrid unit test
        run: cd ${{github.workspace}}/tests && python reporting_pipeline_braingrid_test.py

      - name: Registration pipeline unit test with Python backend
        run: cd ${{github.workspace}}/tests && python test_registration_pipeline_simple.py